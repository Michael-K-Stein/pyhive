name: Publish package to PyPI

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  build-matrix:
    name: Build wheels matrix
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.11", "3.12", "3.13"]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install test deps
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then python -m pip install -r requirements.txt; fi

      - name: Install build tools
        run: python -m pip install --upgrade build

      - name: Build wheel
        run: python -m build -w

      - name: Upload built artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist-${{ matrix.python-version }}
          path: dist/*

  publish:
    name: Publish aggregated wheels
    runs-on: ubuntu-latest
    needs: build-matrix
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Download wheels from 3.11
        uses: actions/download-artifact@v4
        with:
          name: dist-3.11
          path: dist

      - name: Download wheels from 3.12
        uses: actions/download-artifact@v4
        with:
          name: dist-3.12
          path: dist

      - name: Download wheels from 3.13
        uses: actions/download-artifact@v4
        with:
          name: dist-3.13
          path: dist

      - name: Create GitHub release for tag
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          release_name: ${{ github.ref_name }}
          body: |
            Release created by CI for tag ${{ github.ref_name }}.
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload built artifacts to GitHub Release
        if: always()
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          set -euo pipefail
          upload_url="${{ steps.create_release.outputs.upload_url }}"
          if [ -z "${upload_url:-}" ]; then
            echo "No upload_url received from create_release; skipping release upload"
            exit 0
          fi
          for f in dist/*; do
            if [ -f "$f" ]; then
              name=$(basename "$f")
              echo "Uploading $name to release"
              curl -sS -X POST \
                -H "Authorization: token $GITHUB_TOKEN" \
                -H "Content-Type: application/octet-stream" \
                --data-binary @"$f" "${upload_url}?name=$name"
            fi
          done

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@v1.5.0
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}
